---
import Layout from "~/layouts/HooksLayout.astro";
import Menu from "~/components/HookDetailPage/Menu.astro";
import ArticleComment from "~/components/HookDetailPage/ArticleComment.tsx";
import Subscription from "~/components/Subscription/index.astro";

import InstallCommand from "~/components/Homepage/Introduction/InstallCommand.astro";
import "~/styles/markdown.css";
import ContentTable from "~/components/HookDetailPage/ContentTable.astro";
import AuthorIcon from "~icons/mdi/account-edit-outline";

const { name } = Astro.params;

export async function getStaticPaths() {
  const hooks = await Astro.glob("../../content/*.mdx");
  const hookNameList = hooks.map((i) =>
    i.url.replace(/^.*\//, "").replace(/\..*$/, "")
  );
  return hookNameList.map((name) => ({
    params: {
      name,
    },
  }));
}

const hooks = await Astro.glob("../../content/*.mdx");
const hookNameList = hooks.map((i) =>
  i.url.replace(/^.*\//, "").replace(/\..*$/, "")
);
const hookItem = hooks.find((i) => i.url.endsWith(name + ".mdx"));
const Content = hookItem.Content;
const headings = await hookItem.getHeadings();
export const prerender = true;

console.log(JSON.stringify(hookItem, null, 2));
---

<div
  class="mx-auto w-full max-w-[1200px] p-4 bg-[var(--r-theme)] relative shadow-gray-700 shadow-inner"
>
  <Menu hooks={hookNameList} />
  <ContentTable headings={headings} />
  <Layout title={`${name} - raipiot awesome hooks doc`}>
    <div class="">
      <div class="max-w-[720px] w-full mx-auto">
        <div class="p-4">
          <div
            class="text-sky-500 hover:text-sky-600 font-bold text-4xl text-center"
          >
            {name}
          </div>
          <div class="flex gap-1 items-center text-sm justify-center my-6">
            <div class="text-gray-400">
              <AuthorIcon />
            </div>
            <div class="text-gray-200">
              {hookItem.frontmatter.author || "-"}
            </div>
          </div>
          <div class="flex gap-1 items-center text-sm justify-center my-6">
            {
              hookItem.frontmatter.tags?.map((tag) => (
                <div class="bg-sky-300 px-1 rounded-sm text-sky-800">{tag}</div>
              ))
            }
          </div>
          <div
            class="grid sm:grid-cols-2 gap-4 p-2 py-6 justify-between bg-gray-900 rounded-md overflow-hidden relative"
          >
            <div
              class="w-[50%] h-full absolute from-sky-600 to-sky-700 hidden sm:inline-block bg-gradient-to-tr"
              style="clip-path: polygon(0 0, 100% 0%, 80% 100%, 0% 100%);"
            >
            </div>
            <div class="z-10 flex flex-col justify-between">
              <p class="line-clamp-3">{hookItem.frontmatter.intro}</p>
              <div
                class="flex items-center bg-[#1f1d1d] p-2.5 px-3.5 rounded-sm gap-1 border-r border-b border-sky-700 border-t relative bottom-[14px]"
              >
                <InstallCommand />
              </div>
            </div>
            <div class="z-10">
              <Subscription />
            </div>
          </div>
        </div>
        <div class="markdown-body p-4 max-w-[672px]">
          <Content />
          <ArticleComment client:only="react" />
        </div>
      </div>
    </div>
  </Layout>
</div>

<script>
  const list = document.querySelectorAll("#content-aside ul li");
  list?.forEach((li) => {
    li.addEventListener("mouseenter", () => {
      [...list]
        .filter((i) => i !== li)
        .forEach((i) => {
          (i as HTMLElement).style.opacity = "0.2";
        });
      (li as HTMLElement).style.opacity = "1";
    });
    li.addEventListener("mouseleave", () => {
      list.forEach((i) => {
        (i as HTMLElement).style.opacity = "1";
      });
    });
  });
</script>
